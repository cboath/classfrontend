{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","persons","loading","this","getPeople","a","self","setState","axios","get","response","data","Items","table","LinearProgress","Table","TableHead","TableRow","TableCell","TableBody","map","student","EmployeeId","N","Fname","S","LName","LOS","className","AppBar","style","position","minHeight","backgroundColor","Typography","variant","marginTop","Card","width","margin","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gWA2EeA,E,kDAnEb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CAAEC,QAAS,GAAIC,SAAS,GAFzB,E,qDAKd,WACEC,KAAKC,c,8DAGP,8BAAAC,EAAA,6DACQC,EAAOH,MACRI,SAAS,CAACL,SAAQ,IAFzB,SAGyBM,IAAMC,IAAN,2EAHzB,OAGQC,EAHR,OAIEJ,EAAKC,SAAS,CAACN,QAASS,EAASC,KAAKC,MAAOV,SAAQ,IAJvD,gD,0EAOA,WACE,IAAIW,EAkCJ,OAhCEA,EADEV,KAAKH,MAAME,QACL,cAACY,EAAA,EAAD,IAGR,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,0BAGA,cAACA,EAAA,EAAD,yBAGA,cAACA,EAAA,EAAD,wBAGA,cAACA,EAAA,EAAD,uBAKJ,cAACC,EAAA,EAAD,UACIhB,KAAKH,MAAMC,QAAQmB,KAAI,SAACC,GAAD,OACzB,eAACJ,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UAAYG,EAAQC,WAAWC,IAC/B,cAACL,EAAA,EAAD,UAAYG,EAAQG,MAAMC,IAC1B,cAACP,EAAA,EAAD,UAAYG,EAAQK,MAAMD,IAC1B,cAACP,EAAA,EAAD,UAAYG,EAAQM,IAAIF,MAJXJ,EAAQC,WAAWC,WAWtC,sBAAKK,UAAU,MAAf,UAIE,cAACC,EAAA,EAAD,CAAQC,MAAO,CAACC,SAAU,UAAWC,UAAW,OAAQC,gBAAiB,WAAzE,SACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKL,MAAQ,CAAEM,UAAW,OAA9C,sBAEF,cAACC,EAAA,EAAD,CAAMP,MAAO,CAACQ,MAAO,QAASC,OAAQ,OAAQH,UAAW,QAAzD,SACGvB,W,GA7DO2B,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.aa7a538f.chunk.js","sourcesContent":["import './App.css';\r\nimport Table from '@material-ui/core/Table';\r\nimport Card from '@material-ui/core/Card'\r\nimport { AppBar, Button, LinearProgress, TableBody, TableCell, TableHead, TableRow, Typography } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport React,  { Component } from 'react';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { persons: [], loading: false };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getPeople();\r\n  }\r\n\r\n  async getPeople() {\r\n    const self = this;\r\n    self.setState({loading:true})\r\n    const response = await axios.get(`https://3n0lpff69g.execute-api.us-east-1.amazonaws.com/NonProd/students`)\r\n    self.setState({persons: response.data.Items, loading:false})\r\n  }\r\n\r\n  render() {\r\n    let table;\r\n    if (this.state.loading) {\r\n      table = <LinearProgress/>\r\n    } else {\r\n      table = (        \r\n      <Table>\r\n        <TableHead> \r\n          <TableRow>\r\n            <TableCell>\r\n              Employee ID\r\n            </TableCell>\r\n            <TableCell>\r\n              First Name\r\n            </TableCell>\r\n            <TableCell>\r\n              Last Name\r\n            </TableCell>\r\n            <TableCell>\r\n              LOS\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          { this.state.persons.map((student) => (\r\n          <TableRow key={student.EmployeeId.N}>\r\n            <TableCell>{student.EmployeeId.N}</TableCell>\r\n            <TableCell>{student.Fname.S}</TableCell>\r\n            <TableCell>{student.LName.S}</TableCell>\r\n            <TableCell>{student.LOS.S}</TableCell>\r\n          </TableRow>\r\n          ))}\r\n        </TableBody>\r\n    </Table>);\r\n    }\r\n    return (\r\n      <div className=\"App\">\r\n        {/* <Button onClick={this.getPeople} variant=\"contained\" style={{'marginBottom': \"16px\"}}>\r\n          Refresh\r\n        </Button> */}\r\n        <AppBar style={{position: \"inherit\", minHeight: \"48px\", backgroundColor: \"#404040\"}}>\r\n          <Typography variant=\"h6\" style= {{ marginTop: \"8px\"}} >DU AWS</Typography>\r\n        </AppBar>\r\n        <Card style={{width: \"560px\", margin: \"auto\", marginTop: \"20px\" }}>\r\n         { table }\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}