# Do not change version. This is the version of aws buildspec, not the version of your buldspec file.
version: 0.2
phases:
  install:
    runtime-versions:
      nodejs: 10
  pre_build:
    commands:
      - echo Running npm install
      - npm install
      - echo Running tests
      - echo Logging in to Amazon ECR... #Do I need to log into S3?  Assume not due to AWS CLI login already.
  build:
    commands:
      - echo Build started on `date`
      # - echo Building the Docker image...
      # - docker build --build-arg NPM_ACCESS_TOKEN=$npm_access_token -t sample-logger:latest .
      # - echo Tagging the Docker image...
      # - docker tag sample-logger:latest 827840760518.dkr.ecr.us-east-1.amazonaws.com/sample-logger:latest
      # - echo Pushing the Docker image... 
      # - docker push 827840760518.dkr.ecr.us-east-1.amazonaws.com/sample-logger:latest
      - npm run build
  post_build:
    commands:
       # copy the contents of /build to S3
      - aws s3 cp --recursive --acl public-read ./build s3://duclassdeploybucket/ 
      # set the cache-control headers for service-worker.js to prevent
      # browser caching
      - aws s3 cp --acl public-read --cache-control="max-age=0, no-cache, no-store, must-revalidate" ./build/service-worker.js s3://duclassdeploybucket/
      # set the cache-control headers for index.html to prevent
      # browser caching
      - aws s3 cp --acl public-read --cache-control="max-age=0, no-cache, no-store, must-revalidate" ./build/index.html s3://duclassdeploybucket/
      # invalidate the CloudFront cache for index.html and service-worker.js
      # to force CloudFront to update its edge locations with the new versions
      # - >
      #   aws cloudfront create-invalidation --distribution-id ${Distribution} 
      #   --paths /index.html /service-worker.js
